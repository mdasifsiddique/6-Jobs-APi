openapi: 3.0.0
info:
  title: JOBS API
  contact: {}
  version: '1.0'
servers:
- url: https://jobs-api-6.onrender.com/api/v1
  variables: {}
paths:
  /auth/login:
    post:
      tags:
      - Auth
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/loginrequest'
              - example:
                  password: secret
                  email: anna@gmail.com
            example:
              password: secret
              email: anna@gmail.com
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/register:
    post:
      tags:
      - Auth
      summary: register
      operationId: register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/registerrequest'
              - example:
                  name: john
                  password: secret
                  email: john@gmail.com
            example:
              name: john
              password: secret
              email: john@gmail.com
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
      - jobs
      summary: create job
      operationId: createjob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/createjobrequest'
              - example:
                  company: netflix
                  position: frontend developer
            example:
              company: netflix
              position: frontend developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - jobs
      summary: Get all jobs
      operationId: Getalljobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the job id
    get:
      tags:
      - jobs
      summary: get single JOB
      operationId: getsingleJOB
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  
    patch:
      tags:
      - jobs
      summary: Update job
      operationId: Updatejob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdatejobRequest'
              - example:
                  company: random Test
                  position: Any Test Position
                  status: declined
            example:
              company: random Test
              position: Any Test Position
              status: declined
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - jobs
      summary: delete single job
      operationId: deletesinglejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    loginrequest:
      title: loginrequest
      required:
      - password
      - email
      type: object
      properties:
        password:
          type: string
        email:
          type: string
      example:
        password: secret
        email: anna@gmail.com
    registerrequest:
      title: registerrequest
      required:
      - name
      - password
      - email
      type: object
      properties:
        name:
          type: string
        password:
          type: string
        email:
          type: string
      example:
        name: john
        password: secret
        email: john@gmail.com
    createjobrequest:
      title: createjobrequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: netflix
        position: frontend developer
    UpdatejobRequest:
      title: UpdatejobRequest
      required:
      - company
      - position
      - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        company: random Test
        position: Any Test Position
        status: declined
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Auth
- name: jobs